%% Work In Progress code - Scratch work for new fucntions

%% Trying to see if power in different bands modulate wave properties 

%% Beta power 
Beta.hitPower = arrayfun(@(s) (abs(s.xgpbeta)).^2,IntanBehaviour.cueHitTrace,'UniformOutput',false);
Beta.hitPhase = arrayfun(@(s) angle(s.xgpbeta),IntanBehaviour.cueHitTrace,'UniformOutput',false);
Gamma.hitPower = arrayfun(@(s) (abs(s.xgpgamma)).^2,IntanBehaviour.cueHitTrace,'UniformOutput',false);
Gamma.hitPhase = arrayfun(@(s) angle(s.xgpgamma),IntanBehaviour.cueHitTrace,'UniformOutput',false);
Beta.missPower = arrayfun(@(s) (abs(s.xgpbeta)).^2,IntanBehaviour.cueMissTrace,'UniformOutput',false);
Beta.missPhase = arrayfun(@(s) angle(s.xgpbeta),IntanBehaviour.cueMissTrace,'UniformOutput',false);
Gamma.missPower = arrayfun(@(s) (abs(s.xgpgamma)).^2,IntanBehaviour.cueMissTrace,'UniformOutput',false);
Gamma.missPhase = arrayfun(@(s) angle(s.xgpgamma),IntanBehaviour.cueMissTrace,'UniformOutput',false);
Beta.hitAvgPower = mean(cat(4,Beta.hitPower{:}),4);
Beta.hitAvgPhase = mean(cat(4,Beta.hitPhase{:}),4);
Gamma.hitAvgPower = mean(cat(4,Gamma.hitPower{:}),4);
Gamma.hitAvgPhase = mean(cat(4,Gamma.hitPhase{:}),4);
Beta.missAvgPower = mean(cat(4,Beta.missPower{:}),4);
Beta.missAvgPhase = mean(cat(4,Beta.missPhase{:}),4);
Gamma.missAvgPower = mean(cat(4,Gamma.missPower{:}),4);
Gamma.missAvgPhase = mean(cat(4,Gamma.hitPhase{:}),4);

figure();
subplot(2,1,1);hold on;title('Average Beta band power for Hits');xlabel('Time (s)');ylabel('Power (in dB)');
xline(0,'--r','Cue','LabelVerticalAlignment','top');
xline(mean(IntanBehaviour.reactionTime,'all'),'--m','Avg. Reaction Time','LabelVerticalAlignment','top');
plot(IntanBehaviour.cueHitTrace(1).time,10*log10(reshape(Beta.hitAvgPower,[],size(Beta.hitAvgPower,3))),'Color', [0 0 1 0.1],'LineWidth',1.5);
h(1)=plot(IntanBehaviour.cueHitTrace(1).time,10*log10(mean(reshape(Beta.hitAvgPower,[],size(Beta.hitAvgPower,3)),1)),'Color', [0 0 1 1],'LineWidth',1.5);
plot(IntanBehaviour.cueMissTrace(1).time,10*log10(reshape(Beta.missAvgPower,[],size(Beta.missAvgPower,3))),'Color', [1 0 0 0.1],'LineWidth',1.5);
h(2)=plot(IntanBehaviour.cueMissTrace(1).time,10*log10(mean(reshape(Beta.missAvgPower,[],size(Beta.missAvgPower,3)),1)),'Color', [1 0 0 1],'LineWidth',1.5);
legend(h,'Hits','Misses');
subplot(2,1,2);hold on;title('Average Gamma band power for Hits');xlabel('Time (s)');ylabel('Power (in dB)');
xline(0,'--r','Cue','LabelVerticalAlignment','top');
xline(mean(IntanBehaviour.reactionTime,'all'),'--m','Avg. Reaction Time','LabelVerticalAlignment','top')
plot(IntanBehaviour.cueHitTrace(1).time,10*log10(reshape(Gamma.hitAvgPower,[],size(Gamma.hitAvgPower,3))),'Color', [0 0 1 0.1],'LineWidth',1.5);
plot(IntanBehaviour.cueHitTrace(1).time,10*log10(mean(reshape(Gamma.hitAvgPower,[],size(Gamma.hitAvgPower,3)),1)),'Color', [0 0 1 1],'LineWidth',1.5);
plot(IntanBehaviour.cueMissTrace(1).time,10*log10(reshape(Gamma.missAvgPower,[],size(Gamma.missAvgPower,3))),'Color', [1 0 0 0.1],'LineWidth',1.5);
plot(IntanBehaviour.cueMissTrace(1).time,10*log10(mean(reshape(Gamma.missAvgPower,[],size(Gamma.missAvgPower,3)),1)),'Color', [1 0 0 1],'LineWidth',1.5);

% z-scoring 
Beta.muHit = mean(cat(4,Beta.hitPower{:}),[3,4]);
Beta.sigmaHit = std(cat(4,Beta.hitPower{:}),0,[3,4]);
Beta.hitAvgPowerz = (Beta.hitAvgPower - Beta.muHit)./Beta.sigmaHit;
Beta.muMiss = mean(cat(4,Beta.missPower{:}),[3,4]);
Beta.sigmaMiss = std(cat(4,Beta.missPower{:}),0,[3,4]);
Beta.missAvgPowerz = (Beta.missAvgPower - Beta.muMiss)./Beta.sigmaMiss;
Gamma.muHit = mean(cat(4,Gamma.hitPower{:}),[3,4]);
Gamma.sigmaHit = std(cat(4,Gamma.hitPower{:}),0,[3,4]);
Gamma.hitAvgPowerz = (Gamma.hitAvgPower - Gamma.muHit)./Gamma.sigmaHit;
Gamma.muMiss = mean(cat(4,Gamma.missPower{:}),[3,4]);
Gamma.sigmaMiss = std(cat(4,Gamma.missPower{:}),0,[3,4]);
Gamma.missAvgPowerz = (Gamma.missAvgPower - Gamma.muMiss)./Gamma.sigmaMiss;

figure();
subplot(2,1,1);hold on;title('z-scored average Beta band power for Hits');xlabel('Time (s)');ylabel('Power (in dB)');
xline(0,'--r','Cue','LabelVerticalAlignment','top');
xline(mean(IntanBehaviour.reactionTime,'all'),'--m','Avg. Reaction Time','LabelVerticalAlignment','top');
plot(IntanBehaviour.cueHitTrace(1).time,reshape(Beta.hitAvgPowerz,[],size(Beta.hitAvgPowerz,3)),'Color', [0 0 1 0.1],'LineWidth',1.5);
h(1)=plot(IntanBehaviour.cueHitTrace(1).time,mean(reshape(Beta.hitAvgPowerz,[],size(Beta.hitAvgPowerz,3)),1),'Color', [0 0 1 1],'LineWidth',1.5);
plot(IntanBehaviour.cueMissTrace(1).time,reshape(Beta.missAvgPowerz,[],size(Beta.missAvgPowerz,3)),'Color', [1 0 0 0.1],'LineWidth',1.5);
h(2)=plot(IntanBehaviour.cueMissTrace(1).time,mean(reshape(Beta.missAvgPowerz,[],size(Beta.missAvgPowerz,3)),1),'Color', [1 0 0 1],'LineWidth',1.5);
legend(h,'Hits','Misses');
subplot(2,1,2);title('z-scored average Gamma band power for Hits');xlabel('Time (s)');ylabel('Power (in dB)');
xline(0,'--r','Cue','LabelVerticalAlignment','top');
xline(mean(IntanBehaviour.reactionTime,'all'),'--m','Avg. Reaction Time','LabelVerticalAlignment','top');
plot(IntanBehaviour.cueHitTrace(1).time,reshape(Gamma.hitAvgPowerz,[],size(Gamma.hitAvgPowerz,3)),'Color', [0 0 1 0.1],'LineWidth',1.5);
hold on; plot(IntanBehaviour.cueHitTrace(1).time,mean(reshape(Gamma.hitAvgPowerz,[],size(Gamma.hitAvgPowerz,3)),1),'Color', [0 0 1 1],'LineWidth',1.5);
plot(IntanBehaviour.cueMissTrace(1).time,reshape(Gamma.missAvgPowerz,[],size(Gamma.missAvgPowerz,3)),'Color', [1 0 0 0.1],'LineWidth',1.5);
plot(IntanBehaviour.cueMissTrace(1).time,mean(reshape(Gamma.missAvgPowerz,[],size(Gamma.missAvgPowerz,3)),1),'Color', [1 0 0 1],'LineWidth',1.5);


%% 
b = 16;
% Getting Amplitude of waves
wavePhases = angle(Waves.wavesHit(2).p(:,:,Waves.wavesHit(2).waveTime(b,1):Waves.wavesHit(2).waveTime(b,2)));
phi = mapAngle360(rad2deg(reshape(wavePhases,32,size(wavePhases,3))));

waveAmp = abs(Waves.wavesHit(2).p(:,:,Waves.wavesHit(2).waveTime(b,1):Waves.wavesHit(2).waveTime(b,2)));
amp = reshape(waveAmp,32,size(waveAmp,3));

figure;
subplot(2,1,1);
plot(phi');
subplot(2,1,2);
plot(amp');

xijtHit = cellfun(@(s) s(1,1,1),xgpHit);
xijtMiss = cellfun(@(s) s(1,1,1),xgpMiss);

infomap = reshape(MIPhase,[],size(MIPhase,3));
infopeak = mean(infomap,2);
[~,indexsort] = sort(infopeak,1,'descend');

sortedInfomap = infomap(indexsort,:);

figure();
title("Mututal Information across all electrodes - Phase")
imagesc(IntanBehaviour.cueHitTrace(1).time,1:32,sortedInfomap); colormap(hot);
ylabel("Electrodes");xlabel("Time (s)"); 
h = colorbar; h.Label.String = 'Information (bits)';
xline(0,'-w','Cue','LabelVerticalAlignment','top');

figure();
for i=1:size(IntanBehaviour.missTrace,2)
    plot(IntanBehaviour.missTrace(i).time,IntanBehaviour.missTrace(i).trace,'Color',[0 0 0 0.2],'LineWidth',1.5);
    hold on;
end
plot(IntanBehaviour.missTrace(1).time,mean(horzcat(IntanBehaviour.missTrace(1:end).trace),2),'Color',[1 0 0 1],'LineWidth',2);
yline(IntanBehaviour.threshold,'--.b','Threshold','LabelHorizontalAlignment','left'); 
ylabel('Lever deflection (in V)');xlabel('Time (in s)');title('Average Lever Traces for Misses');box off;

%% Performing wave stats for a time window

%% Phase allignement but for phase gradient direction
xgp = arrayfun(@(s) s.pd, Waves.wavesHit, 'UniformOutput', false);
PGAHit = getPhaseAlignment(xgp,parameters);
xgp = arrayfun(@(s) s.pd, Waves.wavesMiss, 'UniformOutput', false);
PGAMiss = getPhaseAlignment(xgp,parameters);

figure();
subplot(2,1,1);
title("Phase Alignment across all electrodes - Hits")
imagesc(IntanBehaviour.cueHitTrace(1).time,1:32,reshape(PGAHit,[],size(PGAHit,3))); colormap(hot);
ylabel("Electrodes");xlabel("Time (s)");
xline(0,'-w','Cue','LabelVerticalAlignment','top');
subplot(2,1,2);
title("Phase Alignment across all electrodes - Misses")
imagesc(IntanBehaviour.cueMissTrace(1).time,1:32,reshape(PGAMiss,[],size(PGAMiss,3))); colormap(hot);
ylabel("Electrodes");xlabel("Time (s)");
xline(0,'-w','Cue','LabelVerticalAlignment','top');


figure();
plot(IntanBehaviour.cueHitTrace(1).time,squeeze(nanmean(PGAHit,[1 2])),'-r','LineWidth',1.2); hold on;
plot(IntanBehaviour.cueHitTrace(1).time,squeeze(nanmean(PGAMiss,[1 2])),'-k','LineWidth',1);
ylabel("Phase Gradient Alignment"); xlabel("Time (s)");
xline(0,'--r','Cue','LabelVerticalAlignment','top');
xline(mean(IntanBehaviour.reactionTime,'all'),'--m','Avg. Reaction Time','LabelVerticalAlignment','top');
title('Phase Gradient Alignment for Hits');box off;% legend('Hits','Miss');

%%
figure();
for i = 1:4
    st = (i-1)*500;
    sp = (i)*500;
    dirComb1 = horzcat(gammaWaves.wavesHit(1:end).waveDir);
    evalPointsHit = horzcat(gammaWaves.wavesHit(1:end).evaluationPoints);
    WaveComb(i).Hit = dirComb1(evalPointsHit >=st & evalPointsHit <= sp);

    dirCombMiss1 = horzcat(gammaWaves.wavesMiss(1:end).waveDir);
    evalPointsMiss = horzcat(gammaWaves.wavesMiss(1:end).evaluationPoints);
    WaveComb(i).Miss = dirCombMiss1(evalPointsMiss >=st & evalPointsMiss <= sp);

    subplot(2,4,i)
    polarhistogram(WaveComb(i).Hit,60);
    subplot(2,4,4+i)
    polarhistogram(WaveComb(i).Miss,60);
end

figure(); hold on;
plot(1:4,arrayfun(@(s) mean(s.Hit,'all'), WaveComb));
plot(1:4,arrayfun(@(s) mean(s.Miss,'all'), WaveComb));
a = arrayfun(@(s) circ_kuipertest(s.Hit,s.Miss,60,0) , WaveComb);
%%
figure();
for i = 1:20
    st = (i-1)*100;
    sp = (i)*100;
    dirComb1 = horzcat(Waves.wavesHit(1:end).speed);
    evalPointsHit = horzcat(Waves.wavesHit(1:end).evaluationPoints);
    WaveComb(i).Hit = dirComb1(evalPointsHit >=st & evalPointsHit <= sp);

    dirCombMiss1 = horzcat(Waves.wavesMiss(1:end).speed);
    evalPointsMiss = horzcat(Waves.wavesMiss(1:end).evaluationPoints);
    WaveComb(i).Miss = dirCombMiss1(evalPointsMiss >=st & evalPointsMiss <= sp);
end

figure(); hold on;
plot(100:100:2000,arrayfun(@(s) mean(s.Hit,'all'), WaveComb));
plot(100:100:2000,arrayfun(@(s) mean(s.Miss,'all'), WaveComb));

a = arrayfun(@(s) ranksum(s.Hit,s.Miss) , WaveComb);

%% test for direction
dirComb = horzcat(Waves.wavesHit(1:end).waveDir);
dirCombMiss = horzcat(Waves.wavesMiss(1:end).waveDir);

[pval, ~, ~] = circ_kuipertest(dirComb, dirCombMiss, 100, 0)

%%
a = horzcat(Waves.wavesHit(:).nWaves);
b = horzcat(Waves.wavesMiss(:).nWaves);

p = ranksum(a,b)

figure('Name','Number of detected waves   Hits and Misses');
group = [ones(size(a')); 2.*ones(size(b'))];
boxplot([a';b'],group,'BoxStyle','filled','PlotStyle','compact');box off;
set(gca,'XTickLabel',{'Hits','Misses'});
xlabel('Number of waves');


%%
figure;
hold on;
arrayfun(@(s) plot(s.time, s.trace),IntanBehaviour.cueMissTrace,'UniformOutput',false);

%% Plotting waves 
a = Waves.wavesHit(1).xf(:,:,1100:1200);
a = reshape(a,[],size(a,3));
[peak, peakIndex] = max(a,[],2);

[~, sortindx] = sort(peakIndex);
asorted = a(sortindx,:);

figure();
plot(asorted','color', [.5 .5 .5], 'linewidth', 1.5 );
xlabel( 'Time (ms)' ); ylabel( 'Amplitude (\muV)' );


plot_evaluation_points( Waves.wavesHit(14).p, Waves.wavesHit(14).evaluationPoints );


%% 
animateWaves(13,Waves.wavesHitReward,0,2);

figure,stack_plot(reshape(Waves.wavesHit(10).xf,[],3001),0,10,1000);

figure,stack_plot(reshape(IntanBehaviour.hitTrace(7).xf,[],3001),1,4,1000);

figure,stack_plot(reshape(LFP.xf(:,:,1:10000),[],10000),0,4,1000);


%%
wavesHitPresent = vertcat(Waves.wavesHit.wavePresent);
wavesMissPresent = vertcat(Waves.wavesMiss.wavePresent);
wavesHitStart = vertcat(Waves.wavesHit.waveStart);
wavesMissStart = vertcat(Waves.wavesMiss.waveStart);

wavesHitRewardPresent = vertcat(Waves.wavesHitReward.wavePresent);
wavesFAPresent = vertcat(Waves.wavesFA.wavePresent);

wavesHitRewardStart = vertcat(Waves.wavesHitReward.waveStart);
wavesFAStart = vertcat(Waves.wavesFA.waveStart);

figure();
subplot(2,1,1);
rasterPlot(wavesHitPresent);
subplot(2,1,2);
rasterPlot(wavesMissPresent);

figure();
subplot(2,1,1);
rasterPlot(wavesHitStart);
subplot(2,1,2);
rasterPlot(wavesMissStart);

figure();
plot(smoothn(sum(wavesHitPresent,1)));
hold on;
plot(smoothn(sum(wavesMissPresent,1)));


figure();
subplot(2,1,1);
rasterPlot(wavesHitRewardPresent);
subplot(2,1,2);
rasterPlot(wavesFAPresent);

figure();
subplot(2,1,1);
rasterPlot(wavesHitRewardStart);
subplot(2,1,2);
rasterPlot(wavesFAStart);

figure();
plot(smoothn(sum(wavesHitRewardPresent,1)));
hold on;
plot(smoothn(sum(wavesFAPresent,1)));


wavesMIHitPresent = vertcat(Waves.wavesMIHit.wavePresent);
wavesMIFAPresent = vertcat(Waves.wavesMIFA.wavePresent);
wavesMIHitStart = vertcat(Waves.wavesMIHit.waveStart);
wavesFAStart = vertcat(Waves.wavesMIFA.waveStart);

figure();
subplot(2,1,1);
rasterPlot(wavesMIHitPresent);
subplot(2,1,2);
rasterPlot(wavesMIFAPresent);

figure();
subplot(2,1,1);
rasterPlot(wavesHitStart);
subplot(2,1,2);
rasterPlot(wavesMissStart);

figure();
plot(smoothn(sum(wavesHitPresent,1)));
hold on;
plot(smoothn(sum(wavesMissPresent,1)));

